<<<<<<< HEAD
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis')))
data_to_remove
dtr2 <- data_to_remove %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(removed_data = n())
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group'))
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F))
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data)
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, Time, Survey)
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, desc(Time), Survey)
=======
<<<<<<< HEAD
for (n in m) {
||||||| e30ca36
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp$surveys[j] <- m2
}
View(post.exp)
pre.exp$surveys[j] <- m1
post.exp$surveys[j] <- numeric()
pre.exp$surveys[j] <- numeric
# Vector to store means
pre.exp <- data.frame()
pre.exp$surveys[j] <- numeric
pre.exp$surveys[j] <- numeric()
pre.exp$surveys[j] <- m1
pre.exp$surveys[j] <- NA
View(pre.exp)
# Vector to store means
pre.exp <- data.frame()
pre.exp$surveys[j] <- NA
pre.exp[surveys[j]] <- NA
pre.exp[surveys[j]] <- NA
# Vector to store means
pre.exp <- data.frame()
pre.exp$surveys[j] <- m1
# Vector to store means
pre.exp <- data.frame('FACES' = numeric())
pre.exp$surveys[j] <- m1
surveys[j]
pre.exp[surveys[j]] <- m1
pre.exp$FACES <- m1
post.exp == NULL
dim(post.exp) == NULL
# Vector to store means
pre.exp <- data.frame('FACES' = numeric(B))
pre.exp[surveys[j]] <- m1
View(pre.exp)
surveys
for (j in 1:1) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 60
# Vector to store means
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp$surveys[j] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp$surveys[j] <- m2
}
View(post.exp)
for (j in 1:1) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 60
# Vector to store means
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
View(pre.exp)
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
=======
filter(Group == 'Control', Time == 'Post')
first_comp <- inner_join(dist_grp_exp_pre, dist_grp_ctrl_pre, by = c("Survey", "Time"))
secnd_comp <- inner_join(dist_grp_exp_post, dist_grp_ctrl_post, by = c("Survey", "Time"))
third_comp <- inner_join(dist_grp_exp_pre, dist_grp_exp_post, by = c("Survey", "Group"))
forth_comp <- inner_join(dist_grp_ctrl_pre, dist_grp_ctrl_post, by = c("Survey", "Group"))
group_comparison <- bind_rows(first_comp, secnd_comp) %>% mutate_all(as.character) %>%
select(Group.x, Group.y, Time, Survey)
time_comparison <- bind_rows(third_comp, forth_comp) %>% mutate_all(as.character) %>%
select(Time.x, Time.y, Group, Survey)
knitr::kable(group_comparison)
knitr::kable(time_comparison)
group_wilcoxon <- group_comparison %>%
# defined the test result
mutate(test = pmap(list(time1 = Time, group1 = Group.x,
time2 = Time, group2 = Group.y,
survey = Survey),
faces_wilcox, paired = F, alternative = "two.sided"),
test_statistic = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'statistic'))),
p.value = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'p.value'))),
effect_size =  test_statistic / unlist(map(test, function(x) `$`(`[`(`[`(x)), 'obs')))**0.5)
time_wilcoxon  <- time_comparison %>%
mutate(test = pmap(list(time1 = Time.x, group1 = Group,
time2 = Time.y, group2 = Group,
survey = Survey),
faces_wilcox, paired = T, alternative = "less"),
test_statistic = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'statistic'))),
p.value = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'p.value'))),
effect_size = test_statistic / unlist(map(test, function(x) `$`(`[`(`[`(x)), 'obs')))**0.5)
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
Group.x, Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey, p, Time))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
Group.x, Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey, p, Time))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
Group.x, Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
`Group A` = Group.x,
`Group B` = Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
`Group A` = Group.x,
`Group B` = Group.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = round(test_statistic, 3), `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(W = round(W, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(p = round(p, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(p = round(p, 3),
ES = round(ES, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Control") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(p = round(p, 3),
ES = round(ES, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
library(tidyverse)
faces <- read_csv('../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
#how many different n to test
m <- seq(from=5, to=55, by=5)
#power dataframe for non-parametric
power_data <- data.frame('FACES' = numeric(length(m)), 'AKS' = numeric(length(m)),
'FES' = numeric(length(m)), 'SCS' = numeric(length(m)),
'FPPS' = numeric(length(m)), 'SEAS' = numeric(length(m)))
#power dataframe for parametric group
power_norm <- data.frame('FACES' = numeric(length(m)), 'AKS' = numeric(length(m)),
'FES' = numeric(length(m)), 'SCS' = numeric(length(m)),
'FPPS' = numeric(length(m)), 'SEAS' = numeric(length(m)))
for (n in m) {
>>>>>>> f02feaf1b6e952150522a4cedfb6d1508747454d
# Number of times to bootstrap
B <- 1e4
#survey categories
surveys <- as.character(unique(faces$Survey))
<<<<<<< HEAD
#dataframe to hold simulation results
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
||||||| e30ca36
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
=======
#dataframe to hold simulation results
test <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
>>>>>>> f02feaf1b6e952150522a4cedfb6d1508747454d
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
control <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_test <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
<<<<<<< HEAD
# Vector to store means
m1d <- numeric()
m1n <- numeric()
#pre sample mean and sd
pre_mean <- mean(sample_faces_pre$Total)
pre_sd <- sd(sample_faces_pre$Total)
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1d[i] <- mean(dist)
dist <- rnorm(n, mean=pre_mean, sd=pre_sd)
m1n[i] <- mean(dist)
}
#vector to store post means
m2d <- numeric()
m2n <- numeric()
#post sample mean and sd
post_mean <- mean(sample_faces_post$Total)
post_sd <- sd(sample_faces_post$Total)
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2d[i] <- mean(dist)
dist <- rnorm(n, mean=post_mean, sd=post_sd)
m2n[i] <- mean(dist)
}
power_data[n / 5, j] <- mean(m2d > m1d)
power_norm[n / 5, j] <- mean(m2n > m1n)
}
}
power <- cbind(power_data, power_norm)
colNames <- c('FACESd', 'AKSd', 'FESd', 'SCSd', 'FPPSd', 'SEASd',
'FACESn', 'AKSn', 'FESn', 'SCSn', 'FPPSn', 'SEASn')
colnames(power) <- colNames
#add indexing for the graph
power$ExpN <- m
power$ControlN <- seq(from=55, to=5, by=-5)
power$ControlN <- seq(from=60, to=5, by=-5)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations",
caption = 'Control Group Sample Size = 60 - Experimental Group Sample Size') +
theme(text = element_text(size = 14))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations") +
theme(text = element_text(size = 14))
#how many different n to test
m <- seq(from=5, to=55, by=5)
#power dataframe for non-parametric
power_data <- data.frame('FACES' = numeric(length(m)), 'AKS' = numeric(length(m)),
'FES' = numeric(length(m)), 'SCS' = numeric(length(m)),
'FPPS' = numeric(length(m)), 'SEAS' = numeric(length(m)))
#power dataframe for parametric group
power_norm <- data.frame('FACES' = numeric(length(m)), 'AKS' = numeric(length(m)),
'FES' = numeric(length(m)), 'SCS' = numeric(length(m)),
'FPPS' = numeric(length(m)), 'SEAS' = numeric(length(m)))
for (n in m) {
# Number of times to bootstrap
B <- 1e4
#survey categories
surveys <- as.character(unique(faces$Survey))
#dataframe to hold simulation results
test <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
control <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_test <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_control <- faces %>%
||||||| e30ca36
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 60
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
View(pre.exp)
View(post.exp)
pre <- pre.exp > post.exp
post <- post.exp > pre.exp
preSum <- colSums(pre)
postSum <- colsums(post)
postSum <- colSums(post)
power <- postSum / (preSum + postSum)
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
pre <- pre.exp > post.exp
post <- post.exp > pre.exp
preSum <- colSums(pre)
postSum <- colSums(post)
power <- postSum / (preSum + postSum)
dist <- tibble(Time = c(rep('Pre', length(pre.exp$FACES)), rep('Post', length(post.exp$FACES))),
Dist = c(pre.exp$FACES, post.exp$FACES)) %>%
mutate(Time = factor(Time))
dist %>%
ggplot() +
geom_density(aes(x = Dist, fill = Time), alpha = 0.7)
pre <- pre.exp - post.exp
post <- post.exp - pre.exp
View(post)
test <- pre < 0
View(pre)
View(pre)
View(test)
testSum <- colSums(test)
preSum <- colSums(pre)
49212/50000
post <- post.exp - pre.exp
post <- post.exp > pre.exp
postSum <- colSums(post)
40675/50000
postSum <- colSums(post)
power <- postSum / B
power
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
=======
sample_faces_control <- faces %>%
>>>>>>> f02feaf1b6e952150522a4cedfb6d1508747454d
filter(Time == 'Post',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Vector to store means
m1d <- numeric()
m1n <- numeric()
#pre sample mean and sd
test_mean <- mean(sample_faces_test$Total)
test_sd <- sd(sample_faces_test$Total)
for (i in 1:B) {
dist <- sample(sample_faces_test$Total, size = n, replace = T)
m1d[i] <- mean(dist)
dist <- rnorm(n, mean=test_mean, sd=test_sd)
m1n[i] <- mean(dist)
}
#vector to store post means
m2d <- numeric()
m2n <- numeric()
#post sample mean and sd
control_mean <- mean(sample_faces_control$Total)
control_sd <- sd(sample_faces_control$Total)
for (i in 1:B) {
<<<<<<< HEAD
dist <- sample(sample_faces_control$Total, size = (60-n), replace = T)
m2d[i] <- mean(dist)
dist <- rnorm((60-n), mean=control_mean, sd=control_sd)
m2n[i] <- mean(dist)
}
power_data[n / 5, j] <- mean(m2d < m1d)
power_norm[n / 5, j] <- mean(m2n < m1n)
}
}
#combine the data frames and change the column names
power <- cbind(power_data, power_norm)
colNames <- c('FACESd', 'AKSd', 'FESd', 'SCSd', 'FPPSd', 'SEASd',
'FACESn', 'AKSn', 'FESn', 'SCSn', 'FPPSn', 'SEASn')
colnames(power) <- colNames
#add indexing for the graph
power$ExpN <- m
power$ControlN <- seq(from=55, to=5, by=-5)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations",
caption = 'Control Group Sample Size = 60 - Experimental Group Sample Size') +
theme(text = element_text(size = 14))
faces_avg <- faces %>%
group_by(Group, `Participant #`, Time, Survey) %>%
summarise(avg_resp = mean(Response)) %>%
ungroup()
faces_sum <- faces %>%
group_by(Group, `Participant #`, Time, Survey) %>%
summarise(avg_resp = sum(Response)) %>%
ungroup()
#histograms of the faces pre data
surveys <- unique(faces_sum$Survey)
par(mfrow=c(2,2))
for (i in 1:2) {
hist((faces_avg %>% filter(Time == 'Pre', Survey==surveys[i]))$avg_resp,
main=paste('Histogram for ', surveys[i]),
breaks=10
)
hist((faces_sum %>% filter(Time == 'Pre', Survey==surveys[i]))$avg_resp,
main=paste('Histogram for ', surveys[i]),
breaks=10
)
}
par(mfrow=c(3,2))
for (i in 3:5) {
hist((faces_avg %>% filter(Time == 'Pre', Survey==surveys[i]))$avg_resp,
main=paste('Histogram for ', surveys[i]),
breaks=10
)
hist((faces_sum %>% filter(Time == 'Pre', Survey==surveys[i]))$avg_resp,
main=paste('Histogram for ', surveys[i]),
breaks=10
)
}
#histograms of the faces experimental data (diff between pre and post)
wider <- faces_avg %>%
pivot_wider(id_cols = c('Participant #', 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = c(avg_resp)) %>%
filter(Group == 'Experimental')
#Plot differences in histogram and qq plot
#we're hoping for roughly normal
diff <- wider$Post-wider$Pre
par(mfrow=c(1,1))
hist(diff,
main='Histogram of Differences Between Pre and Post',
breaks=10)
#Some normality issues in the upper tail. clearly a little bit right skewed
require(car)
qqp(diff)
#histograms of the faces experimental data (diff between pre and post)
wider <- faces_sum %>%
pivot_wider(id_cols = c('Participant #', 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = c(avg_resp)) %>%
filter(Group == 'Experimental')
#Plot differences in histogram and qq plot
#we're hoping for roughly normal
diff <- wider$Post-wider$Pre
par(mfrow=c(1,1))
hist(diff,
main='Histogram of Differences Between Pre and Post',
breaks=10)
#Some normality issues in the upper tail. clearly a little bit right skewed
require(car)
qqp(diff)
surveys <- unique(faces_sum$Survey)
par(mfrow=c(3,2))
for (i in 1:5) {
hist((faces_sum %>% filter(Time == 'Pre', Survey==surveys[i]))$avg_resp,
main=paste('Histogram for ', surveys[i]),
breaks=10
)
}
surveys <- unique(faces_sum$Survey)
par(mfrow=c(3,2))
for (i in 1:6) {
hist((faces_sum %>% filter(Time == 'Pre', Survey==surveys[i]))$avg_resp,
main=paste('Histogram for ', surveys[i]),
breaks=10
)
}
library(tidyverse)
theme_set(theme_bw())
#Import file of clean data
faces <- read_csv('../../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
faces_sum <- faces %>%
group_by(Group, `Participant #`, Time, Survey) %>%
summarise(avg_resp = sum(Response)) %>%
ungroup()
View(faces_sum)
View(faces_sum)
View(faces_sum)
#Plot histogram of pre sums
power %>%
filter(Time == 'Pre') %>%
ggplot(aes(x = resp)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
#Plot histogram of pre sums
power %>% faces_sum %>%
filter(Time == 'Pre') %>%
ggplot(aes(x = resp)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
#Gruup data into sums
faces_sum <- faces %>%
group_by(Group, `Participant #`, Time, Survey) %>%
summarise(resp = sum(Response)) %>%
ungroup()
#Gruup data into sums
faces_sum <- faces %>% filter(Time == 'Pre')
#Gruup data into sums
faces_sum <- faces %>%
group_by(Group, `Participant #`, Time, Survey) %>%
summarise(resp = sum(Response)) %>%
ungroup()
#faces pre
faces_pre <- faces_sum %>% filter(Time == 'Pre')
View(faces_pre)
#Plot histogram of pre sums
faces_pre %>%
ggplot(aes(x = resp)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
#histograms of the faces experimental data (diff between pre and post)
wider <- faces_sum %>%
pivot_wider(id_cols = c('Participant #', 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = c(resp)) %>%
filter(Group == 'Experimental')
View(wider)
wider$diff <- wider$Post - wider$Pre
wider %>%
ggplot(aes(x = diff)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
#Plot histogram of pre sums by survey
faces_pre %>%
ggplot(aes(x = resp)) +
geom_histogram(size = 1, alpha = .75) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = diff)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = diff)) +
geom_histogram(size = 1, alpha = .75) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
View(wider)
##power calcs on test vs control group post
wider <- faces_avg %>%
pivot_wider(id_cols = c('Participant #', 'Survey', 'Time'),
names_from = contains(c('Group')),
values_from = c(avg_resp)) %>%
filter(Time == 'Post')
faces_avg <- faces %>%
group_by(Group, `Participant #`, Time, Survey) %>%
summarise(avg_resp = mean(Response)) %>%
ungroup()
faces_sum <- faces %>%
group_by(Group, `Participant #`, Time, Survey) %>%
summarise(avg_resp = sum(Response)) %>%
ungroup()
#histograms of the faces pre data
surveys <- unique(faces_sum$Survey)
par(mfrow=c(3,2))
for (i in 1:6) {
hist((faces_sum %>% filter(Time == 'Pre', Survey==surveys[i]))$avg_resp,
main=paste('Histogram for ', surveys[i]),
breaks=10
)
}
#histograms of the faces experimental data (diff between pre and post)
wider <- faces_sum %>%
pivot_wider(id_cols = c('Participant #', 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = c(avg_resp)) %>%
filter(Group == 'Experimental')
#Plot differences in histogram and qq plot
#we're hoping for roughly normal
diff <- wider$Post-wider$Pre
par(mfrow=c(1,1))
hist(diff,
main='Histogram of Differences Between Pre and Post',
breaks=10)
wider %>%
ggplot(aes(x = diff)) +
geom_histogram(size = 1, alpha = .75, bins = 30) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider$diff <- wider$Post - wider$Pre
wider %>%
ggplot(aes(x = diff)) +
geom_histogram(size = 1, alpha = .75, bins = 30) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = diff)) +
geom_histogram(size = 1, alpha = .75, bins = 10) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = diff)) +
geom_histogram(size = 1, alpha = .75, bins = 20) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = scale(diff))) +
geom_histogram(size = 1, alpha = .75, bins = 20) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = scale(diff))) +
geom_histogram(size = 1, alpha = .75, bins = 15) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
#Plot histogram of pre sums by survey
faces_pre %>%
ggplot(aes(x = resp)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = scale(diff))) +
geom_histogram(aes(color='red'),
size = 1, alpha = .75, bins = 15) +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = scale(diff))) +
geom_histogram(aes(color='red'),
size = 1, alpha = .75, bins = 15) +
theme(legend.position = "none") +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = scale(diff))) +
geom_qq_line()
wider %>%
ggplot(aes(x = scale(diff))) +
geom_qq_line(distribution = stats::qnorm)
wider %>%
ggplot(aes(sample = scale(diff))) +
geom_qq_line()
wider %>%
ggplot(aes(sample = scale(diff))) +
stat_qq() + stat_qq_line()
wider %>%
ggplot(aes(sample = scale(diff))) +
stat_qq(aes(color=('blue'))) + stat_qq_line(aes(color=('blue')))
wider %>%
ggplot(aes(sample = scale(diff))) +
stat_qq(aes(color=('blue'))) + stat_qq_line(aes(color=('yellow')))
wider %>%
ggplot(aes(sample = scale(diff), color='blue')) +
stat_qq() + stat_qq_line()
wider %>%
ggplot(aes(sample = scale(diff), coluor='blue')) +
stat_qq() + stat_qq_line()
wider %>%
ggplot(aes(sample = scale(diff), colour='blue')) +
stat_qq() + stat_qq_line()
ggplot(aes(sample = scale(diff), colour) +
wider %>%
ggplot(aes(sample = scale(diff))) +
stat_qq(aes(color='darkred')) + stat_qq_line()
wider %>%
wider %>%
ggplot(aes(sample = scale(diff))) +
stat_qq(aes(color='darkred')) + stat_qq_line()
wider %>%
ggplot(aes(sample = scale(diff))) +
stat_qq(aes(color='darkred')) + stat_qq_line(aes(color='darkred')) +
theme(legend.position = "none")
wider %>%
ggplot(aes(sample = scale(diff))) +
stat_qq(aes(color='darkred')) + stat_qq_line(aes(color='darkred')) +
theme(legend.position = "none") +
labs(x = "Standardized Differences",
title = "QQ Plot of Standardized Differnces", y = '')
#Plot histogram of pre sums by survey
faces_pre %>%
ggplot(aes(x = resp)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
#Plot histogram of pre sums by survey
faces_pre %>%
ggplot(aes(x = resp)) +
geom_histogram(aes(color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Survey Reponse Sums",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
wider %>%
ggplot(aes(x = scale(diff))) +
geom_histogram(aes(color='red'),
size = 1, alpha = .75, bins = 15) +
theme(legend.position = "none") +
labs(x = "Standardized Differences",
title = "Pre-Intervention Distributions") +
theme(text = element_text(size = 14))
View(wider)
||||||| e30ca36
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
post <- post.exp > pre.exp
postSum <- colSums(post)
power <- postSum / B
power
?rnorm
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:1) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp$surveys[j] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp$surveys[j] <- m2
}
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
library(tidyverse)
faces <- read_csv('../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
post <- post.exp > pre.exp
postSum <- colSums(post)
power <- postSum / B
power
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
power
post <- post.exp > pre.exp
postSum <- colSums(post)
power <- postSum / B
power
cd
dir
getwd()
getwd()
setwd('C:/Users/James/Documents/R Projects/FACES')
View(faces_sum)
=======
dist <- sample(sample_faces_control$Total, size = (60-n), replace = T)
m2d[i] <- mean(dist)
dist <- rnorm((60-n), mean=control_mean, sd=control_sd)
m2n[i] <- mean(dist)
}
power_data[n / 5, j] <- mean(m2d < m1d)
power_norm[n / 5, j] <- mean(m2n < m1n)
}
}
#combine the data frames and change the column names
power <- cbind(power_data, power_norm)
colNames <- c('FACESd', 'AKSd', 'FESd', 'SCSd', 'FPPSd', 'SEASd',
'FACESn', 'AKSn', 'FESn', 'SCSn', 'FPPSn', 'SEASn')
colnames(power) <- colNames
#add indexing for the graph
power$ExpN <- m
power$ControlN <- seq(from=55, to=5, by=-5)
#colors for the graph
colors <- c('black', 'red', 'green', 'blue', 'purple', 'orange')
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)+
geom_line(aes(y=FACESn), linetype='longdash', size=1)+
geom_line(aes(y=AKSd), color='red', size=1)+
geom_line(aes(y=AKSn), linetype='longdash', color='red', size=1)+
geom_line(aes(y=FESd), color='green', size=1)+
geom_line(aes(y=FESn), linetype='longdash', color='green', size=1)+
geom_line(aes(y=SCSd), color='blue', size=1)+
geom_line(aes(y=SCSn), linetype='longdash', color='blue', size=1)+
geom_line(aes(y=FPPSd), color='purple', size=1)+
geom_line(aes(y=FPPSn), linetype='longdash', color='purple', size=1)+
geom_line(aes(y=SEASd), color='orange', size=1)+
geom_line(aes(y=SEASn), linetype='longdash', color='orange', size=1)
power
colNames <- c('FACESd', 'AKSd', 'FESd', 'SCSd', 'FPPSd', 'SEASd',
'FACESn', 'AKSn', 'FESn', 'SCSn', 'FPPSn', 'SEASn')
power
m
power
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)+
geom_line(aes(y=FACESn), linetype='longdash', size=1)
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)+
# geom_line(aes(y=FACESn), linetype='longdash', size=1)+
geom_line(aes(y=AKSd), color='red', size=1)+
# geom_line(aes(y=AKSn), linetype='longdash', color='red', size=1)+
geom_line(aes(y=FESd), color='green', size=1)+
# geom_line(aes(y=FESn), linetype='longdash', color='green', size=1)+
geom_line(aes(y=SCSd), color='blue', size=1)+
# geom_line(aes(y=SCSn), linetype='longdash', color='blue', size=1)+
geom_line(aes(y=FPPSd), color='purple', size=1)+
# geom_line(aes(y=FPPSn), linetype='longdash', color='purple', size=1)+
geom_line(aes(y=SEASd), color='orange', size=1)
power_data
power
power %>%
pivot_longer(-ExpN, names_to = 'Survey', value_to = 'Proportion True')
power %>%
select(ExpN, ends_with('d'))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', value_to = 'Proportion True')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True')
x <- "This string is moderately long"
rbind(
str_trunc(x, 20, "right"),
str_trunc(x, 20, "left"),
str_trunc(x, 20, "center")
)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 2)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1) +
facet_wrap(Survey ~.)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1) +
facet_wrap(Survey ~., scales = 'free_y')
theme_set(theme_bw())
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1) +
facet_wrap(Survey ~., scales = 'free_y')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .5) #+
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) #+
facet_wrap(Survey ~., scales = 'free_y')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) #+
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size")
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations")
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations") +
theme(text = element_text(size = 14))
caption = 'Control Group Sample Size = 60 - Experimental Group Sample Size) +
power %>%
select(ExpN, ends_with('d')) %>%
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations",
caption = 'Control Group Sample Size = 60 - Experimental Group Sample Size') +
theme(text = element_text(size = 14))
faces <- read_csv('../../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
faces <- read_csv('../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
faces <- read_csv('../../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
>>>>>>> deec95cc5edd266b5186caf0f1af961e8bce7ff8
library(tidyverse)
source('Scripts/Data_Munging/FACES_fns.R')
faces <- format_FACES()
getwd()
source('../Data_Munging/FACES_fns.R')
faces <- format_FACES(path = 'Data/FACES_data_Spring_2019_AllData.csv')
faces <- format_FACES()
faces <- format_FACES(path = '../../Data/FACES_data_Spring_2019_AllData.csv')
missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data) %>%
ungroup()
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis'))
dtr2 <- data_to_remove %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(removed_data = n())
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, desc(Time), Survey)
missing_kable <- missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, desc(Time), Survey)
throwers <- missing_sum %>%
distinct(`Participant #`, Survey, Group, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
tribble(missing_kable,
'', '', '', 'Total', sum(missing_kable$`Missing Observations`), sum(missing_kable$`Observations Removed`))
add_row(missing_kable,
'', '', '', 'Total', sum(missing_kable$`Missing Observations`), sum(missing_kable$`Observations Removed`))
missing_kable
add_row(missing_kable,
'Participant #' = '',
'Group' = '',
'Time' = '',
'Survey' = 'Total',
'Missing Observations' = sum(missing_kable$`Missing Observations`),
'Observations Removed' = sum(missing_kable$`Observations Removed`))
add_row(missing_kable,
`Participant #` = '',
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`))
add_row(missing_kable,
`Participant #` = numeric(),
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`))
add_row(missing_kable,
`Participant #` = 1,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`))
add_row(missing_kable,
`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`))
missing_kable <- missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, Survey, desc(Time)) %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`))
knitr::kable(missing_kable)
dtr2
missing_sum
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group'))
missing_kable <- missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>% mutate(bool = ifelse(missing_data == removed_data, T, F)) %>% View()
View(missing_sum)
obs <- faces %>%
filter(!is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(obs = n()) %>%
ungroup() %>%
pull(obs) %>%
sum()
obs
obs <- faces %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(obs = n()) %>%
ungroup() %>%
pull(obs) %>%
sum()
obs
missing_kable <- missing_kable %>%
add_row(`Participant #` = NA,
Group = c('', ''),
Time = c('', ''),
Survey = c('Total', 'Proportion'),
`Missing Observations` = c(sum(missing_kable$`Missing Observations`),
scales::percent(sum(missing_kable$`Missing Observations`)/obs)),
`Observations Removed` = c(sum(missing_kable$`Observations Removed`),
scales::percent(sum(missing_kable$`Observations Removed`)/obs)))
library(tidyverse)
source('../Data_Munging/FACES_fns.R')
faces <- format_FACES(path = '../../Data/FACES_data_Spring_2019_AllData.csv')
obs <- faces %>%
# filter(!is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(obs = n()) %>%
ungroup() %>%
pull(obs) %>%
sum()
missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data) %>%
ungroup()
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis'))
dtr2 <- data_to_remove %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(removed_data = n())
missing_kable <- missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>% mutate(bool = ifelse(missing_data == removed_data, T, F)) %>% View()
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, Survey, desc(Time))
library(tidyverse)
source('../Data_Munging/FACES_fns.R')
faces <- format_FACES(path = '../../Data/FACES_data_Spring_2019_AllData.csv')
obs <- faces %>%
# filter(!is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(obs = n()) %>%
ungroup() %>%
pull(obs) %>%
sum()
missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data) %>%
ungroup()
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis'))
dtr2 <- data_to_remove %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(removed_data = n())
missing_kable <- missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
<<<<<<< HEAD
arrange(`Participant #`, Survey, desc(Time))
missing_kable <- missing_kable %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`)) %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Proportion',
`Missing Observations` = scales::percent(sum(missing_kable$`Missing Observations`)/obs),
`Observations Removed` = scales::percent(sum(missing_kable$`Observations Removed`)/obs))
missing_kable <- missing_kable %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`))
missing_kable <- missing_kable %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`)) %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Proportion',
`Missing Observations` = scales::sum(missing_kable$`Missing Observations`)/obs,
`Observations Removed` = scales::sum(missing_kable$`Observations Removed`)/obs)
missing_kable <- missing_kable %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed`)) %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Proportion',
`Missing Observations` = sum(missing_kable$`Missing Observations`)/obs,
`Observations Removed` = sum(missing_kable$`Observations Removed`)/obs)
missing_kable %>%
knitr::kable()
missing_kable <- missing_kable %>%
add_row(`Participant #` = NA,
Group = '',
Time = '',
Survey = 'Total',
`Missing Observations` = sum(missing_kable$`Missing Observations`),
`Observations Removed` = sum(missing_kable$`Observations Removed))
Only `r scales::percent(sum(missing_kable$`Observations Removed`)/obs)`
scales::percent(sum(missing_kable$'Observations Removed')/obs)
number(obs, big.mark = ',')
scales::number(obs, big.mark = ',')
library(tidyverse)
source('../Data_Munging/FACES_fns.R')
theme_set(theme_bw())
faces <- read_csv("../../Data/cleaned_FACES_data.csv")
faces_tbl <- faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
# Deselect participant id
select(-`Participant #`) %>%
group_by(Group, Time, Survey, Total_Questions) %>%
# Summarise only the responses
summarise_at('Total_Score',
.funs = list('mean' = mean, 'med' = median,
'rsd' = function(x, ...) sd(x, ...)/mean(x, ...)),
na.rm = T) %>%
ungroup() %>%
# Taking the columns generated by the summary function
pivot_longer(ends_with('mean') | ends_with('med') | ends_with('rsd'),
names_to = 'Category', values_to = 'Response') %>%
# Parsing out the column headers
# separate(Category_Summary, into = c('Category', 'Summary'), sep = "_") %>%
mutate(#Category = str_replace(Category,'[:digit:]', '') %>%
#           str_replace('[:digit:]', '')  %>%
#           str_trim(side = 'both'),
Category = factor(Category),
# Summary  = str_trim(Summary, side = 'both'),
# Summary  = factor(Summary),
Group    = factor(Group),
Time     = factor(Time, levels = c('Pre', 'Post')))
faces_tbl %>%
filter(Category == 'mean') %>%
ggplot() +
geom_col(aes(x = Category, y = Response, fill = Time), color = 'black', position = 'dodge') +
facet_grid(Survey~Group, scales = 'free_y') +
labs(title = 'Mean Response per Group x Survey',
x = '',
y = 'Mean of Response',
caption = 'Mean calculated from all participants
from a sum of their responses (1-5) score.
Only individuals in the  same Group + Survey + Time were averaged')
ggsave(filename = 'mean_comp.png', width = 9, height = 16, units = 'in')
faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
mutate(Time     = factor(Time, levels = c('Pre', 'Post')),
Group    = factor(Group),
Survey   = factor(Survey)) %>%
ggplot() +
geom_boxplot(aes(x = Time, y = Total_Score, fill = Time), position = 'dodge') +
facet_grid(Survey~Group, scales = 'free_y') +
labs(title = 'Distribution of Responses per Group x Survey',
x = '',
y = 'Response Score',
caption = 'Response Score is a sum of all responses (1-5)
from a Survey + Group + Time for a single participant.')
ggsave(filename = 'total_comp.png', width = 9, height = 16, units = 'in')
faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
mutate(Time     = factor(Time, levels = c('Pre', 'Post')),
Group    = factor(Group),
Survey   = factor(Survey)) %>%
pivot_wider(id_cols = c('Participant #', 'Group', 'Survey'),
names_from = 'Time',
values_from = 'Total_Score') %>%
mutate(Diff_Pct = (Post - Pre)/Pre) %>%
ggplot() +
geom_boxplot(aes(x = Group, y = Diff_Pct, fill = Group)) +
facet_wrap(Survey~., scales = 'free_y') +
labs(title = 'Distribution of Differences between Pre and Post Total Scores',
x = '',
y = 'Percent Difference',
caption = 'Calculation: Post - Pre %Difference
in response score per Participant + Survey + Group.') +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
breaks = scales::pretty_breaks(7)) +
theme(text = element_text(size = 16))
ggsave(filename = 'post_vs_pre.png', width = 16, height = 9, units = 'in')
faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
mutate(Time     = factor(Time, levels = c('Pre', 'Post')),
Group    = factor(Group),
Survey   = factor(Survey)) %>%
pivot_wider(id_cols = c('Participant #', 'Group', 'Survey'),
names_from = 'Time',
values_from = 'Total_Score') %>%
mutate(Diff_Pct = (Post - Pre)/Pre,
Diff = (Post - Pre)) %>%
ggplot() +
geom_boxplot(aes(x = Group, y = Diff, fill = Group)) +
facet_wrap(Survey~., scales = 'free_y') +
labs(title = 'Distribution of Differences between Pre and Post Total Scores',
x = '',
y = 'Percent Difference',
caption = 'Calculation: Post - Pre %Difference
in response score per Participant + Survey + Group.') +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
breaks = scales::pretty_breaks(7)) +
theme(text = element_text(size = 16))
ggsave(filename = 'post_vs_pre.png', width = 16, height = 9, units = 'in')
faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
mutate(Time     = factor(Time, levels = c('Pre', 'Post')),
Group    = factor(Group),
Survey   = factor(Survey)) %>%
pivot_wider(id_cols = c('Participant #', 'Group', 'Survey'),
names_from = 'Time',
values_from = 'Total_Score') %>%
mutate(Diff_Pct = (Post - Pre)/Pre,
Diff = (Post - Pre)) %>%
ggplot() +
geom_boxplot(aes(x = Group, y = Diff, fill = Group)) +
facet_wrap(Survey~., scales = 'free_y') +
labs(title = 'Distribution of Differences between Pre and Post Total Scores',
x = '',
y = 'Percent Difference',
caption = 'Calculation: Post - Pre %Difference
in response score per Participant + Survey + Group.') +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
breaks = scales::pretty_breaks(7)) +
theme(text = element_text(size = 17))
ggsave(filename = 'post_vs_pre.png', width = 16, height = 9, units = 'in')
faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
mutate(Time     = factor(Time, levels = c('Pre', 'Post')),
Group    = factor(Group),
Survey   = factor(Survey)) %>%
pivot_wider(id_cols = c('Participant #', 'Group', 'Survey'),
names_from = 'Time',
values_from = 'Total_Score') %>%
mutate(Diff_Pct = (Post - Pre)/Pre,
Diff = (Post - Pre)) %>%
ggplot() +
geom_boxplot(aes(x = Group, y = Diff, fill = Group)) +
facet_wrap(Survey~., scales = 'free_y') +
labs(title = 'Distribution of Differences between Pre and Post Total Scores',
x = '',
y = 'Percent Difference',
caption = 'Calculation: Post - Pre %Difference
in response score per Participant + Survey + Group.') +
scale_y_continuous(#labels = scales::percent_format(accuracy = 1),
breaks = scales::pretty_breaks(7)) +
theme(text = element_text(size = 17))
ggsave(filename = 'post_vs_pre.png', width = 16, height = 9, units = 'in')
faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
mutate(Time     = factor(Time, levels = c('Pre', 'Post')),
Group    = factor(Group),
Survey   = factor(Survey)) %>%
pivot_wider(id_cols = c('Participant #', 'Group', 'Survey'),
names_from = 'Time',
values_from = 'Total_Score') %>%
mutate(Diff_Pct = (Post - Pre)/Pre,
Diff = (Post - Pre)) %>%
ggplot() +
geom_boxplot(aes(x = Group, y = Diff, fill = Group)) +
facet_wrap(Survey~., scales = 'free_y') +
labs(title = 'Distribution of Differences between Pre and Post Total Scores',
x = '',
y = 'Percent Difference',
caption = 'Calculation: Post - Pre Difference
in response score per Participant + Survey + Group.') +
scale_y_continuous(#labels = scales::percent_format(accuracy = 1),
breaks = scales::pretty_breaks(7)) +
theme(text = element_text(size = 17))
ggsave(filename = 'post_vs_pre.png', width = 16, height = 9, units = 'in')
faces %>%
mutate(Survey = factor(Survey)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(Total_Score = sum(Response),
Total_Questions = length(unique(Question))) %>%
ungroup() %>%
mutate(Time     = factor(Time, levels = c('Pre', 'Post')),
Group    = factor(Group),
Survey   = factor(Survey)) %>%
pivot_wider(id_cols = c('Participant #', 'Group', 'Survey'),
names_from = 'Time',
values_from = 'Total_Score') %>%
mutate(Diff_Pct = (Post - Pre)/Pre,
Diff = (Post - Pre)) %>%
ggplot() +
geom_boxplot(aes(x = Group, y = Diff, fill = Group)) +
facet_wrap(Survey~., scales = 'free_y') +
labs(title = 'Distribution of Differences between Pre and Post Total Scores',
x = '',
y = 'Difference',
caption = 'Calculation: Post - Pre Difference
in response score per Participant + Survey + Group.') +
scale_y_continuous(#labels = scales::percent_format(accuracy = 1),
breaks = scales::pretty_breaks(7)) +
theme(text = element_text(size = 17))
ggsave(filename = 'post_vs_pre.png', width = 16, height = 9, units = 'in')
=======
arrange(`Participant #`, desc(Time), Survey)
>>>>>>> f02feaf1b6e952150522a4cedfb6d1508747454d
>>>>>>> deec95cc5edd266b5186caf0f1af961e8bce7ff8
