source(FACES_fns.R)
source('FACES_fns.R')
source('FACES_fns.R')
source('FACES_fns.R')
getwd()
source('~/Data/FACES_fns.R')
source('/Data/FACES_fns.R')
source('Data/FACES_fns.R')
readr::read_csv('Data/FACES_data_Spring_2019_AllData.csv')
readr::write_csv(
clean_faces_1(readr::read_csv('Data/FACES_data_Spring_2019_AllData.csv')),
path = getwd()
)
readr::write_csv(
clean_faces_1(readr::read_csv('Data/FACES_data_Spring_2019_AllData.csv')),
path = paste0(getwd(), 'Data/Clean_All_Data.csv')
)
clean_faces_1(readr::read_csv('Data/FACES_data_Spring_2019_AllData.csv'))
library(tidyverse)
read_csv('Data/FACES_data_Spring_2019_AllData.csv')
faces <- read_csv('Data/FACES_data_Spring_2019_AllData.csv')
faces
faces %>%
pivot_longer(names_to = 'Survey', values_to = 'Response',
-`Participant #`, -Time, -Group)
faces
faces %>%
pivot_longer(names_to = 'Survey', values_to = 'Response',
-`Participant #`, -Time, -Group)
faces
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response')
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
separate(Category_Summary, into = c('Survey', 'Question'), sep = '[:digit:]')
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
separate(Survey, into = c('Survey', 'Question'), sep = '[:digit:]')
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
mutate(Survey = str_replace(Category,'[:digit:]', '') %>%
str_replace('[:digit:]', '')  %>%
str_trim(side = 'both')) %>%
group_by(Survey) %>%
mutate(Question = row_number())
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
mutate(Survey = str_replace(Survey,'[:digit:]', '') %>%
str_replace('[:digit:]', '')  %>%
str_trim(side = 'both')) %>%
group_by(Survey) %>%
mutate(Question = row_number())
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
mutate(Survey = str_replace(Survey,'[:digit:]', '') %>%
str_replace('[:digit:]', '')  %>%
str_trim(side = 'both'))
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
mutate(Survey = str_replace(Survey,'[:digit:]', '') %>%
str_replace('[:digit:]', '')  %>%
str_trim(side = 'both')) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
mutate(Question = row_number())
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
arrange(`Participant #`, Survey)
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
mutate(Survey = str_replace(Survey,'[:digit:]', '') %>%
str_replace('[:digit:]', '')  %>%
str_trim(side = 'both')) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
mutate(Question = row_number())
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response')
faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
mutate(Survey = str_replace(Survey,'[:digit:]', '') %>%
str_replace('[:digit:]', '')  %>%
str_trim(side = 'both')) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
mutate(Question = row_number())
long_face <- faces %>%
pivot_longer(`FACES 1`:SEAS10, names_to = 'Survey', values_to = 'Response') %>%
mutate(Survey = str_replace(Survey,'[:digit:]', '') %>%
str_replace('[:digit:]', '')  %>%
str_trim(side = 'both')) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
mutate(Question = row_number())
long_face
long_face
long_face %>%
mutate(FACES = ifelse(Survey == 'FACES', T, F))
long_face %>%
mutate(FACES = ifelse(Survey == 'FACES', T, F)) %>%
group_by(FACES, Time, Pre) %>%
summarise(Mean = mean(Response),
Sample = n(),
stdev = sd(Response))
long_face
long_face %>%
mutate(FACES = ifelse(Survey == 'FACES', T, F)) %>%
group_by(FACES, Time, Group) %>%
summarise(Mean = mean(Response),
Sample = n(),
stdev = sd(Response))
long_face %>%
filter(any(is.na(everything())))
long_face %>%
filter(is.na(Response))
long_face %>%
filter(!is.na(Response)) %>% # some participants did not answer all the surveys/questions
mutate(FACES = ifelse(Survey == 'FACES', T, F)) %>%
group_by(FACES, Time, Group) %>%
summarise(Mean = mean(Response),
Sample = n(),
stdev = sd(Response))
sum_face <- long_face %>%
filter(!is.na(Response)) %>% # some participants did not answer all the surveys/questions
mutate(FACES = ifelse(Survey == 'FACES', T, F)) %>%
group_by(FACES, Time, Group) %>%
summarise(Mean = mean(Response),
Sample = n(),
stdev = sd(Response))
sum_face
nosey <- function(data, FACES = T, Group = 'Control', Time = 'Post', Metric) {
require(tidyverse)
# Checks:
# FACES should be logical
if (!is_logical(FACES)) stop('FACES arg should be logical.')
# Group should be character and in column names
if (!(Group %in% colnames(data) | is.character(Group))) stop('Group arg should be character of one of the column names.')
# Same thing for Time
if (!(Time %in% colnames(data) | is.character(Time))) stop('Time arg should be character of one of the column names.')
# Same thing for metric
if (!(Metric %in% colnames(data) | is.character(Metric))) stop('Time arg should be character of one of the column names.')
data %>%
filter(Group == Group & Time == Time & FACES == FACES) %>%
pull(Metric)
}
nosey(sum_face, Metric = 'Mean')
source('Data/FACES_fns.R')
source('FACES_fns.R')
nosey
nosey(sum_face, Metric = 'Mean')
nosey
sum_face %>%
filter(Group == 'Control' & Time == 'Post' & FACES == F) %>%
pull(Mean)
sum_face <- long_face %>%
filter(!is.na(Response)) %>% # some participants did not answer all the surveys/questions
mutate(FACES = ifelse(Survey == 'FACES', T, F)) %>%
group_by(`Participant #`, FACES, Time, Group) %>%
summarise(Mean = mean(Response),
Sample = n(),
stdev = sd(Response))
sum_face
sum_face %>%
filter(Group == 'Control' & Time == 'Post' & FACES == F) %>%
pull(Mean)
nosey(sum_face, Metric = 'Mean')
nosey(Group == 'Control' & Time == 'Post' & FACES == F, sum_face, Metric = 'Mean')
nosey(sum_face,Group == 'Control' & Time == 'Post' & FACES == F,  Metric = 'Mean')
nosey(sum_face, Group = 'Control' & Time = 'Post' & FACES = F,  Metric = 'Mean')
nosey(sum_face, Group = 'Control', Time = 'Post', FACES = F,  Metric = 'Mean')
sum_face
source('FACES_fns.R')
nosey
nosey(sum_face, Groupx  = 'Control', Timex  = 'Post', FACESx  = F,  Metric = 'Mean')
source('FACES_fns.R')
nosey(sum_face, Groupx  = 'Control', Timex  = 'Post', FACESx  = F,  Metric = 'Mean')
source('FACES_fns.R')
nosey(sum_face, Groupx  = 'Control', Timex  = 'Post', FACESx  = F,  Metric = 'Mean')
nosey(sum_face, group  = 'Control', time  = 'Post', faces  = F,  Metric = 'Mean')
t.test(nosey(sum_face, group  = 'Control', time  = 'Post', faces  = F,  Metric = 'Mean'),
nosey(sum_face, group  = 'Experimental', time  = 'Post', faces  = F,  Metric = 'Mean'))
t.test(nosey(sum_face, group  = 'Control', time  = 'Pre', faces  = F,  Metric = 'Mean'),
nosey(sum_face, group  = 'Control', time  = 'Post', faces  = F,  Metric = 'Mean'))
t.test(nosey(sum_face, group  = 'Control', time  = 'Pre', faces  = T,  Metric = 'Mean'),
nosey(sum_face, group  = 'Control', time  = 'Post', faces  = T,  Metric = 'Mean'))
tt <- t.test(nosey(sum_face, group  = 'Control', time  = 'Pre', faces  = T,  Metric = 'Mean'),
nosey(sum_face, group  = 'Control', time  = 'Post', faces  = T,  Metric = 'Mean'))
str(tt)
test <- character()
pval <- numeric()
x <- unique(sum_face$FACES)
y <- unique(sum_face$Time)
z <- unique(sum_face$Group)
for (i in x) {
for (j in y) {
tt <- t.test(
nosey(sum_face, faces  = i, time  = j, group  = z[1],  Metric = 'Mean'),
nosey(sum_face, faces  = i, time  = j, group  = z[2],  Metric = 'Mean')
)
append(pval, tt$p.value)
append(test, paste0(i, '-', j, ': Control vs Expr'))
}
}
pval
test
x
y
z
x
length(test)
fuck <- character()
append(fuck, 'you')
test <- character()
pval <- numeric()
x <- unique(sum_face$FACES)
y <- unique(sum_face$Time)
z <- unique(sum_face$Group)
for (i in x) {
for (j in y) {
tt <- t.test(
nosey(sum_face, faces  = i, time  = j, group  = z[1],  Metric = 'Mean'),
nosey(sum_face, faces  = i, time  = j, group  = z[2],  Metric = 'Mean')
)
pval <- append(pval, tt$p.value)
test <- append(test, paste0(i, '-', j, ': Expr vs Control'))
}
}
pval
test
tt.df <- data.frame('Test' = test,
'P-Value' = pval)
tt.df
test <- character()
pval <- numeric()
x <- unique(sum_face$FACES)
y <- unique(sum_face$Time)
z <- unique(sum_face$Group)
for (i in x) {
for (j in y) {
tt <- t.test(
nosey(sum_face, faces  = i, time  = j, group  = z[1],  Metric = 'Mean'),
nosey(sum_face, faces  = i, time  = j, group  = z[2],  Metric = 'Mean')
)
pval <- append(pval, tt$p.value)
test <- append(test, paste0(ifelse(i, 'FACES', 'non-FACES'), ' - ', j, ': Expr vs Control'))
}
}
tt.df <- data.frame('Test' = test,
'P-Value' = pval)
tt.df
y
test <- character()
pval <- numeric()
x <- unique(sum_face$FACES)
y <- unique(sum_face$Time)
z <- unique(sum_face$Group)
for (i in x) {
for (j in z) {
tt <- t.test(
nosey(sum_face, faces  = i, time  = y[1], group  = j,  Metric = 'Mean'),
nosey(sum_face, faces  = i, time  = y[2], group  = j,  Metric = 'Mean')
)
pval <- append(pval, tt$p.value)
test <- append(test, paste0(ifelse(i, 'FACES', 'non-FACES'), ' - ', j, ': Post vs Pre'))
}
}
tt.df2 <- data.frame('Test' = test,
'P-Value' = pval)
tt.df2
x
test <- character()
pval <- numeric()
x <- unique(sum_face$FACES)
y <- unique(sum_face$Time)
z <- unique(sum_face$Group)
for (i in y) {
for (j in z) {
tt <- t.test(
nosey(sum_face, faces  = x[1], time  = i, group  = j,  Metric = 'Mean'),
nosey(sum_face, faces  = x[2], time  = i, group  = j,  Metric = 'Mean')
)
pval <- append(pval, tt$p.value)
test <- append(test, paste0(i, ' - ', j, ': Non-FACES vs FACES Survey'))
}
}
tt.df3 <- data.frame('Test' = test,
'P-Value' = pval)
test <- character()
pval <- numeric()
x <- unique(sum_face$FACES)
y <- unique(sum_face$Time)
z <- unique(sum_face$Group)
for (i in x) {
for (j in y) {
tt <- t.test(
nosey(sum_face, faces  = i, time  = j, group  = z[1],  Metric = 'Mean'),
nosey(sum_face, faces  = i, time  = j, group  = z[2],  Metric = 'Mean')
)
pval <- append(pval, tt$p.value)
test <- append(test, paste0(ifelse(i, 'FACES', 'non-FACES'), ' - ', j, ': Expr vs Control'))
}
}
tt.df1 <- data.frame('Test' = test,
'P-Value' = pval)
bind_rows(tt.df1, tt.df2) %>%
bind_rows(tt.df3)
pvalue_tests <- bind_rows(tt.df1, tt.df2) %>%
bind_rows(tt.df3)
write_csv(pvalue_tests, paste0(getwd(), '/PValue_Test.csv'))
kable(pvalue_tests)
knitr::kable(pvalue_tests)
knitr::kable(arrange(pvalue_tests, P.Value))
write_csv(long_face, path = paste0(getwd(), 'long_data.csv'))
distinct(sum_face, FACES, Group, Time)
sum_face
sum_face %>%
select(-`Participant #`)
sum_face %>%
select(-`Participant #`) %>%
distinct(FACES, Group, Time)
sum_face %>%
ungroup() %>%
select(-`Participant #`) %>%
distinct(FACES, Group, Time)
poss_groupings <- sum_face %>%
ungroup() %>%
select(-`Participant #`) %>%
distinct(FACES, Group, Time)
getwd()
write_csv(poss_groupings, path = paste0(getwd(), '/groupings.csv'))
