m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp$surveys[j] <- m2
}
View(post.exp)
pre.exp$surveys[j] <- m1
post.exp$surveys[j] <- numeric()
pre.exp$surveys[j] <- numeric
# Vector to store means
pre.exp <- data.frame()
pre.exp$surveys[j] <- numeric
pre.exp$surveys[j] <- numeric()
pre.exp$surveys[j] <- m1
pre.exp$surveys[j] <- NA
View(pre.exp)
# Vector to store means
pre.exp <- data.frame()
pre.exp$surveys[j] <- NA
pre.exp[surveys[j]] <- NA
pre.exp[surveys[j]] <- NA
# Vector to store means
pre.exp <- data.frame()
pre.exp$surveys[j] <- m1
# Vector to store means
pre.exp <- data.frame('FACES' = numeric())
pre.exp$surveys[j] <- m1
surveys[j]
pre.exp[surveys[j]] <- m1
pre.exp$FACES <- m1
post.exp == NULL
dim(post.exp) == NULL
# Vector to store means
pre.exp <- data.frame('FACES' = numeric(B))
pre.exp[surveys[j]] <- m1
View(pre.exp)
surveys
for (j in 1:1) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 60
# Vector to store means
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp$surveys[j] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp$surveys[j] <- m2
}
View(post.exp)
for (j in 1:1) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 60
# Vector to store means
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
View(pre.exp)
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 60
# Vector to store means
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
pre <- pre.exp > post.exp
View(pre)
preSum <- colSums(pre)
preSum
View(post.exp)
View(pre.exp)
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 60
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
View(pre.exp)
View(post.exp)
pre <- pre.exp > post.exp
post <- post.exp > pre.exp
preSum <- colSums(pre)
postSum <- colsums(post)
postSum <- colSums(post)
power <- postSum / (preSum + postSum)
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
pre <- pre.exp > post.exp
post <- post.exp > pre.exp
preSum <- colSums(pre)
postSum <- colSums(post)
power <- postSum / (preSum + postSum)
dist <- tibble(Time = c(rep('Pre', length(pre.exp$FACES)), rep('Post', length(post.exp$FACES))),
Dist = c(pre.exp$FACES, post.exp$FACES)) %>%
mutate(Time = factor(Time))
dist %>%
ggplot() +
geom_density(aes(x = Dist, fill = Time), alpha = 0.7)
pre <- pre.exp - post.exp
post <- post.exp - pre.exp
View(post)
test <- pre < 0
View(pre)
View(pre)
View(test)
testSum <- colSums(test)
preSum <- colSums(pre)
49212/50000
post <- post.exp - pre.exp
post <- post.exp > pre.exp
postSum <- colSums(post)
40675/50000
postSum <- colSums(post)
power <- postSum / B
power
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 60
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
post <- post.exp > pre.exp
postSum <- colSums(post)
power <- postSum / B
power
?rnorm
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:1) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp$surveys[j] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp$surveys[j] <- m2
}
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
library(tidyverse)
faces <- read_csv('../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
post <- post.exp > pre.exp
postSum <- colSums(post)
power <- postSum / B
power
surveys <- as.character(unique(faces$Survey))
pre.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
post.exp <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_pre <- faces %>%
filter(Time == 'Pre',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_post <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Number of times to bootstrap
B <- 5e4
# Number of samples to pull
n <- 10
# Vector to store means
m1 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_pre$Total, size = n, replace = T)
m1[i] <- mean(dist)
}
pre.exp[surveys[j]] <- m1
## Performing it again for the post score
B <- 5e4
n <- 10
m2 <- numeric()
for (i in 1:B) {
dist <- sample(sample_faces_post$Total, size = n, replace = T)
m2[i] <- mean(dist)
}
post.exp[surveys[j]] <- m2
}
power
post <- post.exp > pre.exp
postSum <- colSums(post)
power <- postSum / B
power
cd
dir
getwd()
getwd()
setwd('C:/Users/James/Documents/R Projects/FACES')
View(faces_sum)
