filter(Group == 'Control', Time == 'Post')
first_comp <- inner_join(dist_grp_exp_pre, dist_grp_ctrl_pre, by = c("Survey", "Time"))
secnd_comp <- inner_join(dist_grp_exp_post, dist_grp_ctrl_post, by = c("Survey", "Time"))
third_comp <- inner_join(dist_grp_exp_pre, dist_grp_exp_post, by = c("Survey", "Group"))
forth_comp <- inner_join(dist_grp_ctrl_pre, dist_grp_ctrl_post, by = c("Survey", "Group"))
group_comparison <- bind_rows(first_comp, secnd_comp) %>% mutate_all(as.character) %>%
select(Group.x, Group.y, Time, Survey)
time_comparison <- bind_rows(third_comp, forth_comp) %>% mutate_all(as.character) %>%
select(Time.x, Time.y, Group, Survey)
knitr::kable(group_comparison)
knitr::kable(time_comparison)
group_wilcoxon <- group_comparison %>%
# defined the test result
mutate(test = pmap(list(time1 = Time, group1 = Group.x,
time2 = Time, group2 = Group.y,
survey = Survey),
faces_wilcox, paired = F, alternative = "two.sided"),
test_statistic = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'statistic'))),
p.value = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'p.value'))),
effect_size =  test_statistic / unlist(map(test, function(x) `$`(`[`(`[`(x)), 'obs')))**0.5)
time_wilcoxon  <- time_comparison %>%
mutate(test = pmap(list(time1 = Time.x, group1 = Group,
time2 = Time.y, group2 = Group,
survey = Survey),
faces_wilcox, paired = T, alternative = "less"),
test_statistic = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'statistic'))),
p.value = unlist(map(test, function(x) `$`(`[`(`[`(x)), 'p.value'))),
effect_size = test_statistic / unlist(map(test, function(x) `$`(`[`(`[`(x)), 'obs')))**0.5)
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
Group.x, Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey, p, Time))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
Group.x, Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey, p, Time))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
Group.x, Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
`Group A` = Group.x,
`Group B` = Group.y,
`Test Statistic` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(group_wilcoxon %>%
filter(Time == 'Pre') %>%
select(Time, Survey,
`Group A` = Group.x,
`Group B` = Group.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = round(test_statistic, 3), `p` = p.value, `ES` = effect_size) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(W = round(W, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(p = round(p, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Experimental") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(p = round(p, 3),
ES = round(ES, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
knitr::kable(time_wilcoxon %>%
filter(Group == "Control") %>%
select(Group, Survey,
`Pre` = Time.x,
`Post` = Time.y,
`W` = test_statistic, `p` = p.value, `ES` = effect_size) %>%
mutate(p = round(p, 3),
ES = round(ES, 3)) %>%
group_by(Survey) %>%
arrange(Survey))
library(tidyverse)
faces <- read_csv('../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
#how many different n to test
m <- seq(from=5, to=55, by=5)
#power dataframe for non-parametric
power_data <- data.frame('FACES' = numeric(length(m)), 'AKS' = numeric(length(m)),
'FES' = numeric(length(m)), 'SCS' = numeric(length(m)),
'FPPS' = numeric(length(m)), 'SEAS' = numeric(length(m)))
#power dataframe for parametric group
power_norm <- data.frame('FACES' = numeric(length(m)), 'AKS' = numeric(length(m)),
'FES' = numeric(length(m)), 'SCS' = numeric(length(m)),
'FPPS' = numeric(length(m)), 'SEAS' = numeric(length(m)))
for (n in m) {
# Number of times to bootstrap
B <- 1e4
#survey categories
surveys <- as.character(unique(faces$Survey))
#dataframe to hold simulation results
test <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
control <- data.frame('FACES' = numeric(B), 'AKS' = numeric(B), 'FES' = numeric(B),
'SCS' = numeric(B), 'FPPS' = numeric(B), 'SEAS' = numeric(B))
for (j in 1:6) {
sample_faces_test <- faces %>%
filter(Time == 'Post',
Group == 'Experimental',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
sample_faces_control <- faces %>%
filter(Time == 'Post',
Group == 'Control',
Survey == surveys[j]) %>%
group_by(`Participant #`) %>%
summarise(Total = sum(Response)) %>%
ungroup()
# Vector to store means
m1d <- numeric()
m1n <- numeric()
#pre sample mean and sd
test_mean <- mean(sample_faces_test$Total)
test_sd <- sd(sample_faces_test$Total)
for (i in 1:B) {
dist <- sample(sample_faces_test$Total, size = n, replace = T)
m1d[i] <- mean(dist)
dist <- rnorm(n, mean=test_mean, sd=test_sd)
m1n[i] <- mean(dist)
}
#vector to store post means
m2d <- numeric()
m2n <- numeric()
#post sample mean and sd
control_mean <- mean(sample_faces_control$Total)
control_sd <- sd(sample_faces_control$Total)
for (i in 1:B) {
dist <- sample(sample_faces_control$Total, size = (60-n), replace = T)
m2d[i] <- mean(dist)
dist <- rnorm((60-n), mean=control_mean, sd=control_sd)
m2n[i] <- mean(dist)
}
power_data[n / 5, j] <- mean(m2d < m1d)
power_norm[n / 5, j] <- mean(m2n < m1n)
}
}
#combine the data frames and change the column names
power <- cbind(power_data, power_norm)
colNames <- c('FACESd', 'AKSd', 'FESd', 'SCSd', 'FPPSd', 'SEASd',
'FACESn', 'AKSn', 'FESn', 'SCSn', 'FPPSn', 'SEASn')
colnames(power) <- colNames
#add indexing for the graph
power$ExpN <- m
power$ControlN <- seq(from=55, to=5, by=-5)
#colors for the graph
colors <- c('black', 'red', 'green', 'blue', 'purple', 'orange')
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)+
geom_line(aes(y=FACESn), linetype='longdash', size=1)+
geom_line(aes(y=AKSd), color='red', size=1)+
geom_line(aes(y=AKSn), linetype='longdash', color='red', size=1)+
geom_line(aes(y=FESd), color='green', size=1)+
geom_line(aes(y=FESn), linetype='longdash', color='green', size=1)+
geom_line(aes(y=SCSd), color='blue', size=1)+
geom_line(aes(y=SCSn), linetype='longdash', color='blue', size=1)+
geom_line(aes(y=FPPSd), color='purple', size=1)+
geom_line(aes(y=FPPSn), linetype='longdash', color='purple', size=1)+
geom_line(aes(y=SEASd), color='orange', size=1)+
geom_line(aes(y=SEASn), linetype='longdash', color='orange', size=1)
power
colNames <- c('FACESd', 'AKSd', 'FESd', 'SCSd', 'FPPSd', 'SEASd',
'FACESn', 'AKSn', 'FESn', 'SCSn', 'FPPSn', 'SEASn')
power
m
power
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)+
geom_line(aes(y=FACESn), linetype='longdash', size=1)
ggplot(data=power, aes(x=ExpN))+
geom_line(aes(y=FACESd), size=1)+
# geom_line(aes(y=FACESn), linetype='longdash', size=1)+
geom_line(aes(y=AKSd), color='red', size=1)+
# geom_line(aes(y=AKSn), linetype='longdash', color='red', size=1)+
geom_line(aes(y=FESd), color='green', size=1)+
# geom_line(aes(y=FESn), linetype='longdash', color='green', size=1)+
geom_line(aes(y=SCSd), color='blue', size=1)+
# geom_line(aes(y=SCSn), linetype='longdash', color='blue', size=1)+
geom_line(aes(y=FPPSd), color='purple', size=1)+
# geom_line(aes(y=FPPSn), linetype='longdash', color='purple', size=1)+
geom_line(aes(y=SEASd), color='orange', size=1)
power_data
power
power %>%
pivot_longer(-ExpN, names_to = 'Survey', value_to = 'Proportion True')
power %>%
select(ExpN, ends_with('d'))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', value_to = 'Proportion True')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True')
x <- "This string is moderately long"
rbind(
str_trunc(x, 20, "right"),
str_trunc(x, 20, "left"),
str_trunc(x, 20, "center")
)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 2)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1) +
facet_wrap(Survey ~.)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1) +
facet_wrap(Survey ~., scales = 'free_y')
theme_set(theme_bw())
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1) +
facet_wrap(Survey ~., scales = 'free_y')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1)
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .5) #+
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) #+
facet_wrap(Survey ~., scales = 'free_y')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) #+
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y')
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size")
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations")
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey))
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations") +
theme(text = element_text(size = 14))
caption = 'Control Group Sample Size = 60 - Experimental Group Sample Size) +
power %>%
select(ExpN, ends_with('d')) %>%
power %>%
select(ExpN, ends_with('d')) %>%
pivot_longer(-ExpN, names_to = 'Survey', values_to = 'Proportion True') %>%
mutate(Survey = str_replace(Survey, 'd', ''),
Survey = factor(Survey)) %>%
ggplot(aes(x = ExpN)) +
geom_line(aes(y = `Proportion True`, color = Survey),
size = 1, alpha = .75) +
facet_wrap(Survey ~., scales = 'free_y') +
labs(x = "Experimental Group Sample Size",
title = "Power Calculations",
caption = 'Control Group Sample Size = 60 - Experimental Group Sample Size') +
theme(text = element_text(size = 14))
faces <- read_csv('../../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
faces <- read_csv('../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
faces <- read_csv('../../Data/cleaned_FACES_data.csv', col_types = c('ffffdf'))
library(tidyverse)
source('Data_Munging/FACES_fns.R')
# first way, specify data
# fpath <- read_csv('../Data/FACES_data_Spring_2019_AllData.csv')
# format_FACES(data = fpath)
# second way, specify path
# format_FACES(path = '../Data/FACES_data_Spring_2019_AllData.csv') # merged cells?
# third way, just call the fucntion
faces <- format_FACES()
knitr::kable(sample_n(faces, 20))
(missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data) %>%
ungroup())
missing_sum$missing_data
obs <- faces %>%
filter(!is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(obs = n()) %>%
ungroup() %>%
pull(obs) %>%
sum()
missing_obs <- missing_sum %>%
pull(missing_data) %>%
sum()
missing_obs / obs;missing_obs;obs
rm(list = ls())
library(tidyverse)
source('Data_Munging/FACES_fns.R')
faces <- format_FACES()
source('Data_Munging/FACES_fns.R')
source('../Data_Munging/FACES_fns.R')
getwd()
source('Scripts/Data_Munging/FACES_fns.R')
faces <- format_FACES()
faces <- format_FACES(path = 'Data/FACES_data_Spring_2019_AllData.csv')
(missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data) %>%
ungroup())
missing_sum$missing_data
obs <- faces %>%
filter(!is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(obs = n()) %>%
ungroup() %>%
pull(obs) %>%
sum()
obs
obs <- faces %>%
#filter(!is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(obs = n()) %>%
ungroup() %>%
pull(obs) %>%
sum()
obs
obs <- faces %>% nrow()
obs
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis')))
data_to_remove
dtr2 <- data_to_remove %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(removed_data = n())
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group'))
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F))
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data)
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, Time, Survey)
missing_sum %>%
left_join(dtr2, by = c('Participant #', 'Time', 'Survey', 'Group')) %>%
mutate(Impute = ifelse(is.na(removed_data), T, F),
removed_data = ifelse(is.na(removed_data), 0, removed_data)) %>%
select(`Participant #`, Group, Time, Survey,
`Missing Observations` = missing_data,
`Observations Removed` = removed_data) %>%
arrange(`Participant #`, desc(Time), Survey)
