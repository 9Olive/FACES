# first way, specify data
fpath <- read_csv('../Data/FACES_data_Spring_2019_AllData.csv')
fpath
format_FACES()
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
pivot_wider(names_from = Group)
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
filter(Group = 'Control' & Time == 'Post' & Survey == 'AKS')
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
filter(Group == 'Control' & Time == 'Post' & Survey == 'AKS')
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
filter(Group == 'Control' & Survey == 'AKS')
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
pivot_wider()
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = Group,
values_from = score)
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = Group,
values_from = score) %>%
mutate(Control = unlist(Control),
Experimental = unlist(Experimental))
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = Group,
values_from = score) -> x
x
x$Control[1]
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T)) %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time')), ,
values_from = score)
faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces_sum <- faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces_sum
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time')),
values_from = score)
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time')),
values_from = score) %>%
mutate(Post_Comparison = Control_Post - Experimental_Post)
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time')),
values_from = score) %>%
mutate(Post_Comparison = Experimental_Post - Control_Post)
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time')),
values_from = score) %>%
mutate(Post_Comparison = Experimental_Post - Control_Post,
Cont_Comparison = Control_Post - Control_Pre,
Exp_Comp        = Experimental_Post - Experimental_Pre)
library(tidyverse)
source('Data_Munging/FACES_fns.R')
(faces <- format_FACES())
faces_sum <- faces %>%
group_by(Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces_sum
faces_sum <- faces %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces_sum
faces_sum <- faces %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces_sum
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time')),
values_from = score) %>%
mutate(Post_Comparison = Experimental_Post - Control_Post,
Cont_Comparison = Control_Post - Control_Pre,
Exp_Comp        = Experimental_Post - Experimental_Pre)
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time')),
values_from = score)
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time', 'Participant #')),
values_from = score) %>%
mutate(Post_Comparison = Experimental_Post - Control_Post,
Cont_Comparison = Control_Post - Control_Pre,
Exp_Comp        = Experimental_Post - Experimental_Pre)
faces_sum %>%
pivot_wider(id_cols = contains(c('Survey')),
names_from = contains(c('Group', 'Time', 'Participant #')),
values_from = score)
library(tidyverse)
source('Data_Munging/FACES_fns.R')
# first way, specify data
fpath <- read_csv('../Data/FACES_data_Spring_2019_AllData.csv')
format_FACES(data = fpath)
# second way, specify path
format_FACES(path = '../Data/FACES_data_Spring_2019_AllData.csv') # merged cells?
# third way, just call the fucntion
(faces <- format_FACES())
format_FACES
faces_sum <- faces %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response, na.rm = T))
faces_sum
faces
faces %>%
filter(is.na(Response))
faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response)))
faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data)
missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data)
missing_sum
keepers <- missing_sum %>%
filter(missing_data <= 2)
faces
throwers
keepers <- missing_sum %>%
filter(missing_data <= 2)
throwers <- missing_sum %>%
filter(missing_data > 2)
throwers
throwers
faces %>%
filter(`Participant #` %in% throwers$`Participant #`)
faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'))
faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('_og', '_mis'))
data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('_og', '_mis'))
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('_og', '_mis')))
faces %>%
setdiff(data_to_remove)
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis')))
data_to_remove %>%
select(-Time_mis, -missing_data) %>%
setdiff(x = faces)
faces_clean <- data_to_remove %>%
select(-Time_mis, -missing_data) %>%
setdiff(x = faces)
faces_clean <- data_to_remove %>%
select(-Time_mis, -missing_data) %>%
setdiff(x = faces)
(faces_clean <- data_to_remove %>%
select(-Time_mis, -missing_data) %>%
setdiff(x = faces))
nrow(faces_row) == nrow(faces) - nrow(data_to_remove)
nrow(faces_clean) == nrow(faces) - nrow(data_to_remove)
nrow(faces)
nrow(faces) - nrow(data_to_remove)
nrow(faces_clean)
data_to_remove %>%
select(-Time_mis, -missing_data)
faces
data_to_remove %>%
select(-Time_mis, -missing_data) %>%
setequal(x = faces)
data_to_remove %>%
select(-Time_mis, -missing_data) %>%
setequal(x = faces)
data_to_remove %>%
select(-Time_mis, -missing_data)
(faces_clean <-  setdiff(x = faces, y = select(data_to_remove, -Time_mis, -missing_data))
(faces_clean <-  setdiff(x = faces, y = select(data_to_remove, -Time_mis, -missing_data)))
anti_join(x = faces_clean, y = faces)
anti_join(y = faces_clean, x = faces)
anti_join(data_to_remove, y = anti_join(y = faces_clean, x = faces))
anti_join(data_to_remove, x = anti_join(y = faces_clean, x = faces))
anti_join(data_to_remove, y = anti_join(y = faces_clean, x = faces))
anti_join(y = faces_clean, x = faces)
data_to_remove
select(data_to_remove, -Time_mis, -missing_data)
anti_join(select(data_to_remove, -Time_mis, -missing_data), y = anti_join(y = faces_clean, x = faces))
anti_join(select(data_to_remove, -Time_mis, -missing_data), x = anti_join(y = faces_clean, x = faces))
select(data_to_remove, -Time_mis, -missing_data)
select(data_to_remove, -Time_mis, -missing_data) %>%
distinct(.keep_all = T)
select(data_to_remove, -Time_mis, -missing_data)
select(data_to_remove, -Time_mis, -missing_data) %>% View()
View(throwers)
keepers <- missing_sum %>%
filter(missing_data <= 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey) %>% # added to removed Pre and Post
filter(missing_data > 2)
(missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data))
keepers <- missing_sum %>%
filter(missing_data <= 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis')))
(faces_clean <-  setdiff(x = faces, y = select(data_to_remove, -Time_mis, -missing_data)))
nrow(faces_clean) == nrow(faces) - nrow(data_to_remove)
nrow(faces) - nrow(data_to_remove)
nrow(faces_clean)
select(data_to_remove, -Time_mis, -missing_data) %>% View()
distinct(.keep_all = T)
select(data_to_remove, -Time_mis, -missing_data) %>% #View()
distinct(.keep_all = T)
select(data_to_remove, -Time_mis, -missing_data)
keepers <- missing_sum %>%
filter(missing_data <= 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis')))
(faces_clean <-  setdiff(x = faces, y = select(data_to_remove, -Time_mis, -missing_data)))
nrow(faces_clean) == nrow(faces) - nrow(data_to_remove)
anti_join(select(data_to_remove, -Time_mis, -missing_data), x = anti_join(y = faces_clean, x = faces))
select(data_to_remove, -Time_mis, -missing_data) %>% #View()
distinct(.keep_all = T)
select(data_to_remove, -Time_mis, -missing_data) %>% View()
throwers
View(throwers)
missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
missing_sum %>%
#distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey) %>% # added to removed Pre and Post
filter(missing_data > 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey)
(missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data) %>%
ungroup())
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
keepers <- missing_sum %>%
filter(missing_data <= 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis')))
(faces_clean <-  setdiff(x = faces, y = select(data_to_remove, -Time_mis, -missing_data)))
nrow(faces_clean) == nrow(faces) - nrow(data_to_remove)
anyNA(faces_clean)
faces_clean %>%
filter(is.na(Response)) %>%
setequal(keepers)
keepers
data_to_impute <- faces %>%
right_join(keepers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_kp'))
data_to_impute
data_to_impute <- faces %>%
right_join(keepers, by = c('Participant #', 'Group', 'Survey', 'Time'),
suffix = c('', '_kp'))
data_to_impute
data_to_impute <- faces %>%
right_join(keepers, by = c('Participant #', 'Group', 'Survey', 'Time'),
suffix = c('', '_kp')) %>%
filter(is.na(Response))
data_to_impute
(data_to_impute <- faces %>%
right_join(keepers, by = c('Participant #', 'Group', 'Survey', 'Time'),
suffix = c('', '_kp')) %>%
filter(is.na(Response)))
faces_clean %>%
group_by(Time, Group, Survey, Question) %>%
mutate(Response = ifelse(is.na(Response), mean(Response, na.rm = T), Response))
faces_clean2 <- faces_clean %>%
group_by(Time, Group, Survey, Question) %>%
mutate(Response = ifelse(is.na(Response), mean(Response, na.rm = T), Response)) %>%
ungroup()
faces_clean2
data_to_impute %>%
left_join(faces_clean2, by = c('Participant #', 'Time', 'Group', 'Survey', 'Question'))
data_to_impute %>%
left_join(faces_clean2, by = c('Participant #', 'Time', 'Group', 'Survey', 'Question'),
suffix = c('_mis', '_cor'))
data_to_impute %>%
left_join(faces_clean2, by = c('Participant #', 'Time', 'Group', 'Survey', 'Question'),
suffix = c('_mis', '_fill'))
# To visulize what we changed
data_to_impute %>%
left_join(faces_clean2, by = c('Participant #', 'Time', 'Group', 'Survey', 'Question'),
suffix = c('_mis', '_fill'))
# Should be equal
nrow(faces_clean2) == nrow(faces_clean)
# Should be false
anyNA(faces_clean2)
library(tidyverse)
source('Data_Munging/FACES_fns.R')
# first way, specify data
fpath <- read_csv('../Data/FACES_data_Spring_2019_AllData.csv')
format_FACES(data = fpath)
# second way, specify path
format_FACES(path = '../Data/FACES_data_Spring_2019_AllData.csv') # merged cells?
# third way, just call the fucntion
(faces <- format_FACES())
(missing_sum <- faces %>%
filter(is.na(Response)) %>%
group_by(`Participant #`, Time, Group, Survey) %>%
summarise(missing_data = sum(is.na(Response))) %>%
arrange(missing_data) %>%
ungroup())
keepers <- missing_sum %>%
filter(missing_data <= 2)
throwers <- missing_sum %>%
distinct(`Participant #`, Group, Survey, .keep_all = T) %>% # added to removed Pre and Post
filter(missing_data > 2)
(data_to_remove <- faces %>%
right_join(throwers, by = c('Participant #', 'Group', 'Survey'),
suffix = c('', '_mis')))
(faces_clean <-  setdiff(x = faces, y = select(data_to_remove, -Time_mis, -missing_data)))
# Check that we only took the rows we intended to
nrow(faces_clean) == nrow(faces) - nrow(data_to_remove)
# Check for missing data
anyNA(faces_clean)
(data_to_impute <- faces %>%
right_join(keepers, by = c('Participant #', 'Group', 'Survey', 'Time'),
suffix = c('', '_kp')) %>%
filter(is.na(Response)))
faces_clean2 <- faces_clean %>%
group_by(Time, Group, Survey, Question) %>%
mutate(Response = ifelse(is.na(Response), mean(Response, na.rm = T), Response)) %>%
ungroup()
# To visulize what we changed
data_to_impute %>%
left_join(faces_clean2, by = c('Participant #', 'Time', 'Group', 'Survey', 'Question'),
suffix = c('_mis', '_fill'))
# Should be true
nrow(faces_clean2) == nrow(faces_clean)
# Should be false
anyNA(faces_clean2)
faces_sum <- faces_clean2 %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response))
faces_sum
faces_sum <- faces_clean2 %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response),
n_questions = n())
faces_sum
faces_sum %>%
pivot_wider(id_cols = contains(c('Group', 'Time', 'Survey')),
names_from = contains(c('Participant #')),
values_from = score)
faces_sum %>%
pivot_wider(id_cols = contains(c('Participant #')),
names_from = contains(c('Group', 'Time', 'Survey')),
values_from = score)
faces_sum
faces_sum
lead(1:10, 1)
faces_sum <- faces_clean2 %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response),
n_questions = n()) %>%
ungroup() %>%
group_by(Survey, Time, Group) %>%
summarise(mean_participant_score = mean(score),
question_chk = length(unique(n_questions)) == 1)
faces_sum
faces_sum <- faces_clean2 %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response),
n_questions = n()) %>%
ungroup() %>%
group_by(Survey, Time, Group) %>%
summarise(mean_participant_score = mean(score),
question_chk = length(unique(n_questions)) == 1) %>%
ungroup()
(faces_sum <- faces_clean2 %>%
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response),
n_questions = n()) %>%
ungroup() %>%
group_by(Survey, Time, Group) %>%
summarise(mean_participant_score = mean(score),
question_chk = length(unique(n_questions)) == 1) %>%
ungroup())
faces_sum %>%
pivot_wider(id_cols = ,
names_from = contains(c('Time', 'Survey')),
values_from = score)
faces_sum %>%
pivot_wider(id_cols = ,
names_from = contains(c('Time', 'Survey')),
values_from = mean_participant_score)
faces_sum %>%
pivot_wider(id_cols = c( 'Survey', 'Group'),
names_from = contains(c('Time',)),
values_from = mean_participant_score) %>%
mutate(Post_Comparison = Experimental_Post - Control_Post,
Cont_Comparison = Control_Post - Control_Pre,
Exp_Comp        = Experimental_Post - Experimental_Pre)
faces_sum %>%
pivot_wider(id_cols = c( 'Survey', 'Group'),
names_from = contains(c('Time',)),
values_from = mean_participant_score)
faces_sum %>%
pivot_wider(id_cols = c( 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = mean_participant_score)
faces_sum %>%
pivot_wider(id_cols = c( 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = mean_participant_score) %>%
mutate(Diff = Post - Pre)
(faces_sum <- faces_clean2 %>%
# First group manipulation
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response),
n_questions = n()) %>%
ungroup() %>%
# Second group manipulation
group_by(Survey, Time, Group) %>%
summarise(mean_participant_score = mean(score),
spl_size = lenth(unique(`Participant #`)),
question_chk = length(unique(n_questions)) == 1) %>%
ungroup())
(faces_sum <- faces_clean2 %>%
# First group manipulation
group_by(`Participant #`, Survey, Time, Group) %>%
summarise(score = sum(Response),
n_questions = n()) %>%
ungroup() %>%
# Second group manipulation
group_by(Survey, Time, Group) %>%
summarise(mean_participant_score = mean(score),
spl_size = length(unique(`Participant #`)),
question_chk = length(unique(n_questions)) == 1) %>%
ungroup())
faces_sum %>%
pivot_wider(id_cols = c( 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = c(mean_participant_score, spl_size)) %>%
mutate(Diff = Post - Pre)
faces_sum %>%
pivot_wider(id_cols = c( 'Survey', 'Group'),
names_from = contains(c('Time')),
values_from = c(mean_participant_score, spl_size))# %>%
